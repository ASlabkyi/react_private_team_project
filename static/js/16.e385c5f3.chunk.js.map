{"version":3,"file":"static/js/16.e385c5f3.chunk.js","mappings":"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","sources":["components/CalcRightSide/CalcRightSide.jsx","pages/Diary/Diary.styled.jsx","components/DiaryLeftSide/buttonAdd.jsx","components/DiaryLeftSide/DateAndCalendar.jsx","components/DiaryLeftSide/ListOfProdacts.jsx","redux/product/selectors.js","components/DiaryLeftSide/DiaryLeftSide.jsx","pages/Diary/Diary.jsx"],"sourcesContent":["import { Box, useMediaQuery } from '@mui/material';\nimport imageDesktop from '../../images/bg-pictures/desktop/side-bar-leaves.png';\nimport imageTablet from '../../images/bg-pictures/tablet/sideBarLeaves768_1x.png';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst CalcRightSide = () => {\n  const isTablet = useMediaQuery('(min-width:768px) and (max-width:1279px)');\n  const isDisktop = useMediaQuery('((min-width:1280px))');\n  const notRecomended = useSelector(\n    state => state.dailyRate.notAllowedProducts\n  );\n  console.log(notRecomended[0]);\n\n  const kcalLeft1 = useSelector(state => state.dayInfo.daySummary?.kcalLeft);\n  const kcalConsumed1 = useSelector(\n    state => state.dayInfo.daySummary?.kcalConsumed\n  );\n  const dailyRate1 = useSelector(state => state.dayInfo.daySummary?.dailyRate);\n  const percentsOfDailyRate1 = useSelector(\n    state => state.dayInfo.daySummary?.percentsOfDailyRate\n  );\n\n  let mainFlexDirection = 'column';\n  let mainWidth = '320px';\n  let mainPaddingTop = '40px';\n  let mainPaddingBottom = '24px';\n  let mainPaddingLeft = '20px';\n  let mainPaddingRight = '20px';\n  let minHeight = '433px';\n  let listWidth = '280px';\n  let mainGap = '40px';\n  let image = null;\n  let bgImageWidth = '0';\n  let bgImageHeight = '0';\n  let bgImageTop = '0';\n  let bgImageLeft = '0';\n\n  if (isTablet) {\n    mainFlexDirection = 'row';\n    mainWidth = '768px';\n    mainPaddingTop = '80px';\n    mainPaddingBottom = '80px';\n    mainPaddingLeft = '32px';\n    mainPaddingRight = '80px';\n    minHeight = '326px';\n    listWidth = '288px';\n    mainGap = '80px';\n    image = imageTablet;\n    bgImageWidth = '602px';\n    bgImageHeight = '428px';\n    bgImageTop = '-36px';\n    bgImageLeft = '399px';\n  }\n\n  if (isDisktop) {\n    mainWidth = '517px';\n    mainPaddingTop = '292px';\n    mainPaddingBottom = '20px';\n    mainPaddingLeft = '106px';\n    mainPaddingRight = '123px';\n    minHeight = '850px';\n    listWidth = '288px';\n    mainGap = '60px';\n    image = imageDesktop;\n    bgImageWidth = '740px';\n    bgImageHeight = '740px';\n    bgImageTop = '35px';\n    bgImageLeft = '12px';\n  }\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        bgcolor: 'var(--gray-bg-color)',\n        maxWidth: mainWidth,\n        minHeight: minHeight,\n        paddingTop: mainPaddingTop,\n        paddingBottom: mainPaddingBottom,\n        paddingLeft: mainPaddingLeft,\n        paddingRight: mainPaddingRight,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: mainFlexDirection,\n        gap: mainGap,\n        fontSize: '14px',\n        lineHeight: '17px',\n        letterSpacing: '0.04em',\n      }}\n    >\n      <Box\n        sx={{\n          width: listWidth,\n        }}\n      >\n        <Box\n          sx={{\n            fontWeight: '700',\n            color: 'var(--black-color)',\n            marginBottom: '20px',\n          }}\n        >\n          Summary for 20.06.2020\n        </Box>\n\n        <Box\n          sx={{\n            fontWeight: '400',\n            color: 'var(--gray-text-color)',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n          }}\n        >\n          <ul>\n            <li>Left</li>\n            <li>Consumed</li>\n            <li>Daily rate</li>\n            <li>n% of normal</li>\n          </ul>\n          <ul>\n            <li style={{ textAlign: 'right' }}>\n              {kcalLeft1 ? `${kcalLeft1}` : `000`} kcal\n            </li>\n            <li style={{ textAlign: 'right' }}>\n              {kcalConsumed1 ? `${kcalConsumed1}` : `000`} kcal\n            </li>\n            <li style={{ textAlign: 'right' }}>\n              {dailyRate1 ? `${dailyRate1}` : `000`} kcal\n            </li>\n            <li style={{ textAlign: 'right' }}>\n              {percentsOfDailyRate1\n                ? `${Math.round(percentsOfDailyRate1)}`\n                : `000`}{' '}\n              %\n            </li>\n          </ul>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          width: listWidth,\n        }}\n      >\n        <Box\n          sx={{\n            width: listWidth,\n            fontWeight: '700',\n            color: 'var(--black-color)',\n            marginBottom: '20px',\n          }}\n        >\n          Food not recommended\n        </Box>\n\n        <Box\n          sx={{\n            fontWeight: '400',\n            color: 'var(--gray-text-color)',\n          }}\n        >\n          {notRecomended[0] ? (\n            <ul>\n              {notRecomended.slice(0, 5).map(el => (\n                <li key={nanoid()}>{el}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>Your diet will be displayed here</p>\n          )}\n        </Box>\n      </Box>\n\n      <div\n        style={{\n          backgroundImage: `url(${image})`,\n          backgroundRepeat: 'no-repeat',\n          width: bgImageWidth,\n          height: bgImageHeight,\n          position: 'absolute',\n          top: bgImageTop,\n          left: bgImageLeft,\n        }}\n      ></div>\n\n      {/* <Box\n        sx={{\n          width: '100px',\n          height: '100px',\n          position: 'absolute',\n          bgcolor: 'pink',\n          backgroundImage:\n            'url(\"../../images/bg-pictures/desktop/side-bar-leaves.png\")',\n        }}\n      ></Box> */}\n    </Box>\n  );\n};\n\nexport default CalcRightSide;\n","import styled from 'styled-components';\n\nexport const DiaryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  width: 100%;\n  @media (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n","import { Box } from '@mui/material';\nimport './DiaryLeftSide.css';\n\nconst BottonAdd = () => {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <button className=\"buttonAdd\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"none\"\n        >\n          <g clipPath=\"url(#a)\">\n            <path\n              fill=\"#fff\"\n              d=\"M18.72 12.96h-5.76v5.76h-1.92v-5.76H5.28v-1.92h5.76V5.28h1.92v5.76h5.76v1.92Z\"\n            />\n          </g>\n          <defs>\n            <clipPath id=\"a\">\n              <path fill=\"#fff\" d=\"M.48.48h23.04v23.04H.48z\" />\n            </clipPath>\n          </defs>\n        </svg>\n      </button>\n    </Box>\n  );\n};\n\nexport default BottonAdd;\n","import { Box, useMediaQuery } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { useDispatch } from 'react-redux';\nimport { changeDate } from 'redux/dayInfo/dayInfoSlice';\nimport { setFetchDay } from 'redux/dayInfo/operations';\n\nconst DateAndCalendar = () => {\n  const isTablet = useMediaQuery('(min-width:768px) and (max-width:1279px)');\n  const isDisktop = useMediaQuery('((min-width:1280px))');\n  const dispatch = useDispatch();\n\n  let topCalendar = '50px';\n  let leftCalendar = '-25px';\n\n  if (isTablet) {\n    topCalendar = '-150px';\n    leftCalendar = '260px';\n  }\n  if (isDisktop) {\n    topCalendar = '-290px';\n    leftCalendar = '260px';\n  }\n\n  //Календарь\n  const [value, onChange] = useState(new Date());\n  const day = value.getDate();\n  const month = value.getMonth() + 1;\n  const year = value.getFullYear();\n\n  const formattedDate = `${day < 10 ? '0' : ''}${day}.${\n    month < 10 ? '0' : ''\n  }${month}.${year}`; // \"18.04.2023\"\n\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchFormatData = { date: value.toISOString().split('T')[0] };\n    console.log(fetchFormatData); // \"2023-04-18\"\n    dispatch(changeDate(fetchFormatData));\n    dispatch(setFetchDay(fetchFormatData));\n  }, [dispatch, value]);\n\n  function openCloseCalendar() {\n    setIsCalendarOpen(!isCalendarOpen);\n  }\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n\n        fontWeight: '700',\n        fontSize: '34px',\n        lineHeight: '41px',\n        color: '#212121',\n        display: 'flex',\n        gap: '20px',\n        marginBottom: '60px',\n        alignItems: 'center',\n      }}\n    >\n      <span>{formattedDate}</span>\n      <svg\n        onClick={openCloseCalendar}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"20\"\n        height=\"20\"\n        fill=\"none\"\n      >\n        <path fill=\"#9B9FAA\" d=\"M15 9h-2v2h2V9ZM11 9H9v2h2V9ZM7 9H5v2h2V9Z\" />\n        <path\n          fill=\"#9B9FAA\"\n          d=\"M17 2h-1V0h-2v2H6V0H4v2H3c-1.11 0-1.99.9-1.99 2L1 18a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2Zm0 16H3V7h14v11Z\"\n        />\n      </svg>\n      <Box\n        sx={{\n          position: 'absolute',\n          left: leftCalendar,\n          top: topCalendar,\n          zIndex: '10',\n          cursor: 'pointer',\n        }}\n      >\n        {isCalendarOpen && <Calendar onChange={onChange} value={value} />}\n      </Box>\n    </Box>\n  );\n};\n\nexport default DateAndCalendar;\n","import { Box, useMediaQuery } from '@mui/material';\nimport ButtonAdd from './buttonAdd';\nimport DateAndCalendar from './DateAndCalendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDeleteProduct } from 'redux/dayInfo/operations';\n\nconst ListOfProdacts = () => {\n  const data = useSelector(state => state.dayInfo.eatenProducts);\n  const dayId = useSelector(state => state.dayInfo?.id);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    const value = { dayId, eatenProductId: id };\n    console.log(value);\n    dispatch(setDeleteProduct(value));\n  };\n\n  const isTablet = useMediaQuery('(min-width:768px) and (max-width:1279px)');\n  const isDisktop = useMediaQuery('((min-width:1280px))');\n\n  let listBoxWidth = '320px';\n  let listBoxHeight = '453px';\n  let listBoxPadding = '33px 14px 60px 20px';\n  let listBoxMargin = '0px auto 0px auto';\n  let listBoxGap = '8px';\n  let listBoxGapButtonDelite = '8px';\n  let listBoxMarginBottom = '60px';\n\n  let titleWidth = '130px';\n  let weightWidth = '49px';\n  let kcalWidth = '74px';\n\n  if (isTablet) {\n    listBoxWidth = '610px';\n    listBoxHeight = '250px';\n    listBoxPadding = '0px auto 0px 0px';\n    listBoxGap = '35px';\n    listBoxGapButtonDelite = '31px';\n    listBoxMarginBottom = '0px';\n\n    titleWidth = '240px';\n    weightWidth = '104px';\n    kcalWidth = '105px';\n  }\n\n  if (isDisktop) {\n    listBoxWidth = '624px';\n    listBoxHeight = '279px';\n    listBoxPadding = '0px auto 0px 0px';\n    listBoxGap = '40px';\n    listBoxGapButtonDelite = '31px';\n    listBoxMarginBottom = '0px';\n\n    titleWidth = '240px';\n    weightWidth = '104px';\n    kcalWidth = '105px';\n  }\n  return (\n    <Box\n      sx={{\n        width: listBoxWidth,\n        padding: listBoxPadding,\n        height: listBoxHeight,\n        margin: listBoxMargin,\n\n        overflowY: 'scroll',\n        '&::-webkit-scrollbar': {\n          width: '6px',\n        },\n        '&::-webkit-scrollbar-track': {\n          background: '#F0F1F3',\n        },\n\n        '&::-webkit-scrollbar-thumb': {\n          width: '6px',\n          backgroundColor: '#264061',\n          borderRadius: '20px',\n        },\n      }}\n    >\n      {!isTablet && !isDisktop && <DateAndCalendar />}\n      <Box\n        sx={{\n          marginBottom: listBoxMarginBottom,\n        }}\n      >\n        <ul>\n          {data?.map(el => {\n            const { title, weight, kcal, id } = el;\n            return (\n              <li key={id} className=\"listItem\">\n                <Box\n                  sx={{\n                    display: 'flex',\n                    gap: listBoxGapButtonDelite,\n                  }}\n                >\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      gap: listBoxGap,\n                    }}\n                  >\n                    <Box className=\"params\" sx={{ width: titleWidth }}>\n                      {title}\n                    </Box>\n                    <Box className=\"params\" sx={{ width: weightWidth }}>\n                      {weight} g\n                    </Box>\n                    <Box\n                      className=\"params\"\n                      sx={{ width: kcalWidth, textAlign: 'right' }}\n                    >\n                      {kcal} kcal\n                    </Box>\n                  </Box>\n                  <button\n                    className=\"buttoneDelite\"\n                    onClick={() => handleDelete(id)}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"14\"\n                      height=\"14\"\n                      fill=\"none\"\n                    >\n                      <path\n                        stroke=\"#9B9FAA\"\n                        strokeWidth=\"2\"\n                        d=\"m1 1 12 12M1 13 13 1\"\n                      />\n                    </svg>\n                  </button>\n                </Box>\n              </li>\n            );\n          })}\n        </ul>\n      </Box>\n\n      {!isTablet && !isDisktop && <ButtonAdd />}\n    </Box>\n  );\n};\n\nexport default ListOfProdacts;\n","export const selectProducts = state => state.product.products;","import { Box, useMediaQuery } from '@mui/material';\nimport ButtonAdd from './buttonAdd';\nimport './DiaryLeftSide.css';\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'react-calendar/dist/Calendar.css';\nimport DateAndCalendar from './DateAndCalendar';\nimport ListOfProdacts from './ListOfProdacts';\nimport { setSearchProduct, setAddProduct } from 'redux/product/operations';\nimport { selectProducts } from 'redux/product/selectors';\n\nconst DiaryLeftSide = () => {\n  const isTablet = useMediaQuery('(min-width:768px) and (max-width:1279px)');\n  const isDisktop = useMediaQuery('((min-width:1280px))');\n\n  let meinBoxWidth = '320px';\n  let meinBoxHeight = '453px';\n  let meinBoxPadding = '0px 0px 0px 0px';\n  let meinBoxMargin = '0px auto 0px auto';\n\n  if (isTablet) {\n    meinBoxWidth = '768px';\n    meinBoxHeight = '594px';\n    meinBoxPadding = '100px 126px 55px 32px';\n    meinBoxMargin = '0px auto 0px auto';\n  }\n\n  if (isDisktop) {\n    meinBoxWidth = '763px';\n    meinBoxHeight = '850px';\n    meinBoxPadding = '293px 120px 56px 16px';\n    meinBoxMargin = '0px auto 0px auto';\n  }\n  const products = useSelector(selectProducts);\n\n  const [search, setSearch] = useState('');\n  const [gram, setGram] = useState('');\n  const [productId, setProductId] = useState(null);\n  const dispatch = useDispatch();\n  const date = useSelector(state => state.dayInfo.date?.date);\n\n  console.log(search);\n\n  const handleChange = e => {\n    const value = e.target.value;\n\n    setSearch(value);\n  };\n\n  const handleChangeGram = e => {\n    const value = e.target.value;\n\n    setGram(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const product = {\n      productId,\n      weight: gram,\n      date,\n    };\n    dispatch(setAddProduct(product));\n    setGram('');\n    setSearch('');\n  };\n\n  const hanldeOnClik = product => {\n    setSearch(product.title.ua);\n    setProductId(product._id);\n  };\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    dispatch(setSearchProduct(search));\n  }, [dispatch, search]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          width: meinBoxWidth,\n          height: meinBoxHeight,\n          padding: meinBoxPadding,\n          margin: meinBoxMargin,\n        }}\n      >\n        {(isTablet || isDisktop) && <DateAndCalendar />}\n        {(isTablet || isDisktop) && (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '60px',\n              gap: '87px',\n            }}\n          >\n            <form\n              style={{ display: 'contents' }}\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n            >\n              <label className=\"label labelProduct\">\n                Enter product name\n                {products[0] && products.length < 958 && search.length > 1 && (\n                  <div className=\"searchProducts\">\n                    <ul>\n                      {products.map(el => (\n                        <li key={el._id} onClick={() => hanldeOnClik(el)}>\n                          {el.title.ua}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                <input\n                  onChange={handleChange}\n                  type=\"text\"\n                  className=\"input\"\n                  name=\"title\"\n                  value={search}\n                  list=\"listProducts\"\n                  required\n                />\n              </label>\n              <label className=\"label labelGrams\">\n                Grams\n                <input\n                  onChange={handleChangeGram}\n                  type=\"number\"\n                  name=\"weight\"\n                  value={gram}\n                  required\n                  className=\"input\"\n                />\n              </label>\n              <ButtonAdd />\n            </form>\n            {/* <DairyAddProductForm></DairyAddProductForm> */}\n          </Box>\n        )}\n        <ListOfProdacts />\n      </Box>\n    </>\n    // <Box\n    //   sx={{\n    //     width: meinBoxWidth,\n    //     height: meinBoxHeight,\n    //     padding: meinBoxPadding,\n    //     margin: meinBoxMargin,\n    //   }}\n    // >\n    //   )}\n    //   {(isTablet || isDisktop) && (\n    //     <Box\n    //       sx={{\n    //         display: 'flex',\n    //         alignItems: 'center',\n    //         marginBottom: '60px',\n    //         gap: '87px',\n    //       }}\n    //     >\n    //       <Box\n    //         sx={{\n    //           display: 'flex',\n    //           gap: isDisktop ? '48px' : '24px',\n    //         }}\n    //       >\n    //         <form style={{ display: 'contents' }} autoComplete=\"off\" onSubmit={handleSubmit}>\n    //           <label className=\"label labelProduct\">\n    //             Enter product name\n    //             <input\n    //               onChange={handleChangeProduct}\n    //               type=\"text\"\n    //               className=\"input\"\n    //               name=\"title\"\n    //               value={title}\n    //               list=\"listProducts\"\n    //               required\n    //             />\n    //             <datalist id=\"listProducts\">\n    //               {products?.length > 0 &&\n    //                 products?.map(prod => {\n    //                   return (\n    //                     <option key={prod._id} value={prod.title.ua} id={prod._id} />\n    //                   );\n    //                 })}\n    //             </datalist>\n    //           </label>\n    //           <label className=\"label labelGrams\">\n    //             Grams\n    //             <input\n    //               onChange={handleChangeWeight}\n    //               type=\"number\"\n    //               name=\"weight\"\n    //               value={weight}\n    //               required\n    //               className=\"input\"\n    //             />\n    //           </label>\n    //           <ButtonAdd />\n    //         </form>\n    //       </Box>\n    //     </Box>\n    //   )\n    //   }\n    //   <Box\n    //     sx={{\n    //       width: listBoxWidth,\n    //       padding: listBoxPadding,\n    //       height: listBoxHeight,\n    //       margin: listBoxMargin,\n\n    //       overflowY: 'scroll',\n    //       '&::-webkit-scrollbar': {\n    //         width: '6px',\n    //       },\n    //       '&::-webkit-scrollbar-track': {\n    //         background: '#F0F1F3',\n    //       },\n\n    //       '&::-webkit-scrollbar-thumb': {\n    //         width: '6px',\n    //         backgroundColor: '#264061',\n    //         borderRadius: '20px',\n    //       },\n    //     }}\n    //   >\n    //     {!isTablet && !isDisktop && (\n    //       <Box\n    //         sx={{\n    //           fontWeight: '700',\n    //           fontSize: '18px',\n    //           lineHeight: '22px',\n    //           color: '#212121',\n    //           display: 'flex',\n    //           gap: '20px',\n    //           marginBottom: '32px',\n    //         }}\n    //       >\n    //         <span>20.06.2020</span>\n    //         <svg\n    //           xmlns=\"http://www.w3.org/2000/svg\"\n    //           width=\"20\"\n    //           height=\"20\"\n    //           fill=\"none\"\n    //         >\n    //           <path\n    //             fill=\"#9B9FAA\"\n    //             d=\"M15 9h-2v2h2V9ZM11 9H9v2h2V9ZM7 9H5v2h2V9Z\"\n    //           />\n    //           <path\n    //             fill=\"#9B9FAA\"\n    //             d=\"M17 2h-1V0h-2v2H6V0H4v2H3c-1.11 0-1.99.9-1.99 2L1 18a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2Zm0 16H3V7h14v11Z\"\n    //           />\n    //         </svg>\n    //       </Box>\n    //     )}\n    //     <Box\n    //       sx={{\n    //         marginBottom: listBoxMarginBottom,\n    //       }}\n    //     >\n    //       <ul>\n    //         {data.map(el => {\n    //           const { title, weight, kcal, id } = el;\n    //           return (\n    //             <li key={id} className=\"listItem\">\n    //               <Box\n    //                 sx={{\n    //                   display: 'flex',\n    //                   gap: listBoxGapButtonDelite,\n    //                 }}\n    //               >\n    //                 <Box\n    //                   sx={{\n    //                     display: 'flex',\n    //                     gap: listBoxGap,\n    //                   }}\n    //                 >\n    //                   <Box className=\"params\" sx={{ width: titleWidth }}>\n    //                     {title}\n    //                   </Box>\n    //                   <Box className=\"params\" sx={{ width: weightWidth }}>\n    //                     {weight} g\n    //                   </Box>\n    //                   <Box\n    //                     className=\"params\"\n    //                     sx={{ width: kcalWidth, textAlign: 'right' }}\n    //                   >\n    //                     {kcal} kcal\n    //                   </Box>\n    //                 </Box>\n    //                 <button className=\"buttoneDelite\">\n    //                   <svg\n    //                     xmlns=\"http://www.w3.org/2000/svg\"\n    //                     width=\"14\"\n    //                     height=\"14\"\n    //                     fill=\"none\"\n    //                   >\n    //                     <path\n    //                       stroke=\"#9B9FAA\"\n    //                       strokeWidth=\"2\"\n    //                       d=\"m1 1 12 12M1 13 13 1\"\n    //                     />\n    //                   </svg>\n    //                 </button>\n    //               </Box>\n    //             </li>\n    //           );\n    //         })}\n    //       </ul>\n    //     </Box>\n\n    //     {!isTablet && !isDisktop && <ButtonAdd />}\n    //   </Box>\n    // </Box >\n  );\n};\n\nexport default DiaryLeftSide;\n","import CalcRightSide from 'components/CalcRightSide/CalcRightSide';\nimport { DiaryWrapper } from './Diary.styled';\nimport DiaryLeftSide from 'components/DiaryLeftSide/DiaryLeftSide';\n\nconst Diary = () => {\n  return (\n    <DiaryWrapper>\n      <DiaryLeftSide />\n      <CalcRightSide />\n    </DiaryWrapper>\n  );\n};\n\nexport default Diary;\n"],"names":["isTablet","useMediaQuery","isDisktop","notRecomended","useSelector","state","dailyRate","notAllowedProducts","console","log","kcalLeft1","dayInfo","daySummary","kcalLeft","kcalConsumed1","kcalConsumed","dailyRate1","percentsOfDailyRate1","percentsOfDailyRate","mainFlexDirection","mainWidth","mainPaddingTop","mainPaddingBottom","mainPaddingLeft","mainPaddingRight","minHeight","listWidth","mainGap","image","bgImageWidth","bgImageHeight","bgImageTop","bgImageLeft","imageTablet","imageDesktop","Box","sx","position","bgcolor","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","margin","display","flexDirection","gap","fontSize","lineHeight","letterSpacing","width","fontWeight","color","marginBottom","justifyContent","style","textAlign","Math","round","slice","map","el","nanoid","backgroundImage","backgroundRepeat","height","top","left","DiaryWrapper","styled","alignItems","className","xmlns","fill","clipPath","d","id","dispatch","useDispatch","topCalendar","leftCalendar","useState","Date","value","onChange","day","getDate","month","getMonth","year","getFullYear","formattedDate","isCalendarOpen","setIsCalendarOpen","useEffect","fetchFormatData","date","toISOString","split","changeDate","setFetchDay","onClick","zIndex","cursor","data","eatenProducts","dayId","listBoxWidth","listBoxHeight","listBoxPadding","listBoxGap","listBoxGapButtonDelite","listBoxMarginBottom","titleWidth","weightWidth","kcalWidth","padding","overflowY","background","backgroundColor","borderRadius","title","weight","kcal","eatenProductId","setDeleteProduct","handleDelete","stroke","strokeWidth","selectProducts","product","products","meinBoxWidth","meinBoxHeight","meinBoxPadding","meinBoxMargin","search","setSearch","gram","setGram","productId","setProductId","setSearchProduct","autoComplete","onSubmit","e","preventDefault","setAddProduct","length","ua","_id","target","type","name","list","required","CalcRightSide"],"sourceRoot":""}