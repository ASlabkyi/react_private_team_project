{"version":3,"file":"static/js/500.b9b97f7c.chunk.js","mappings":"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","sources":["images/bg-pictures/tablet/stain.svg","images/bg-pictures/desktop/stain.svg","components/Background/BackgroundWrapper.styled.jsx","components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStain(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 521,\n    height: 563,\n    viewBox: \"0 0 521 563\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M188.322 238.052C46.4931 249.816 4.6057 371.017 0.472073 430.147C-8.34633 595.956 108.559 712.469 169.032 750H553V0C553 0 526.82 22.5184 522.687 63.4191C488.699 240.809 490.077 267.463 428.532 276.195C366.987 284.927 289.367 229.67 188.322 238.052Z\",\n    fill: \"#F0F1F3\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStain);\nexport default __webpack_public_path__ + \"static/media/stain.8e9f2abb49c97a092b4435e82ef68ef1.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStain(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 715,\n    height: 900,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    preserveAspectRatio: \"xMinYMin meet\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"title\", null, \"Layer 1\"), /*#__PURE__*/React.createElement(\"rect\", {\n    fill: \"none\",\n    height: 849,\n    width: 715,\n    y: 0,\n    x: 0,\n    id: \"svgEditorBackground\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"svg_1\",\n    fill: \"#F0F1F3\",\n    d: \"M 205.009,259 C 50.6127,271.8 5.0138,403.667 0.513902,468 -9.08588,648.4 111.03497,793.53478 176.86697,834.36778 c 22.49,13.95 59.5794,59.10783 244.56573,63.61299 v 0 C 593.42548,893.45073 612.185,788.498 664,761 c 8,-4.245 32,-4.5 50,8 L 716.5,0 H 602 C 602,0 573.501,24.5 569.001,68.9999 532.002,262 533.502,291 466.503,300.5 399.505,310 315.007,249.881 205.009,259 Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStain);\nexport default __webpack_public_path__ + \"static/media/stain.99bb6ba4f0f7e8c48b6a6fb02d6a27eb.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport strawberry from '../../images/bg-pictures/tablet/strawberry.png';\nimport banana from '../../images/bg-pictures/tablet/banana.png';\nimport leaves from '../../images/bg-pictures/tablet/leaves.png';\nimport stain from '../../images/bg-pictures/tablet/stain.svg';\nimport leavesMain from '../../images/bg-pictures/desktop/leaves_main.png';\nimport strawberryMain from '../../images/bg-pictures/desktop/strawberry.png';\nimport bananaMain from '../../images/bg-pictures/desktop/banana.png';\nimport stainMain from '../../images/bg-pictures/desktop/stain.svg';\n\nconst BackgroundWrapper = styled.div`\n    @media screen and (min-width: 768px) {\n        min-height: 100vh;\n        min-width: 100vh;\n        background-image: url(${strawberry}), url(${banana}), url(${leaves}), url(${stain});\n        background-size: 208px 203px, 421px 351px, 502px 531px, 421px 463px;\n            background-position: right 24px bottom 168px, right 0 bottom 0,\n            right 166px bottom -50px, right 0 bottom -4px;\n        background-repeat: no-repeat;\n    }\n\n  @media screen and (max-width: 767px) {\n    background-image: none;\n  }\n\n  @media screen and (min-width: 1280px) {\n        min-height: 100vh;\n        min-width: 100vh;\n        background-image: url(${leavesMain}), url(${bananaMain}), url(${strawberryMain}), url(${stainMain});\n        background-size: 746px 820px, 715px 510px, 386px 379px, 715px 849px;\n        background-position: right 195px top 0px, right -247px top -50px,\n        right -8px top 470px, right -113px top 70px;\n    }\n`;\n\nexport default BackgroundWrapper;","import styled from '@emotion/styled';\nimport { Button, TextField } from '@mui/material';\n\nexport const Title = styled.h2`\n  // font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  letter-spacing: 0.04em;\n  text-align: center;\n  color: var(--orange-color);\n  margin-bottom: 60px;\n  @media screen and (min-width: 768px) {\n    text-align: start;\n  }\n`;\n\nexport const Input = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'var(--orange-color)',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'var(--orange-color)',\n  },\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: 'var(--orange-color)',\n    },\n  },\n});\n\nexport const RegisterBtn = styled(Button)({\n  textTransform: 'none',\n  boxShadow: '0px 4px 10px rgba(252, 132, 45, 0.5)',\n  borderRadius: '30px',\n  width: '182px',\n  height: '44px',\n  fontSize: '14px',\n  fontWeight: '700',\n  lineHeight: '1.75',\n  backgroundColor: 'var(--orange-color)',\n  ' &:hover': {\n    backgroundColor: '#ef6705',\n  },\n  ' &:focus': {\n    backgroundColor: '#ef6705',\n  },\n});\n\nexport const LoginBtn = styled(Button)({\n  textTransform: 'none',\n  borderRadius: '30px',\n  width: '182px',\n  height: '44px',\n  fontSize: '14px',\n  fontWeight: '700',\n  lineHeight: '1.75',\n  backgroundColor: 'transparant',\n  color: '#FC842D',\n  border: '2px solid var(--orange-color)',\n  ' &:hover': {\n    backgroundColor: '#ef6705',\n    border: 'none',\n    color: 'var(--white-color)',\n  },\n  ' &:focus': {\n    backgroundColor: '#ef6705',\n    border: 'none',\n    color: 'var(--white-color)',\n  },\n});\n","import { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { Box } from '@mui/material';\nimport { Formik, Form } from 'formik';\nimport {\n  Input,\n  LoginBtn,\n  RegisterBtn,\n  Title,\n} from './RegistrationForm.styled.js';\nimport { register } from 'redux/auth/operations.js';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required(\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles d'Artagnan\"\n    ),\n  email: yup\n    .string()\n    .email('Invalid type of email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(\n      8,\n      'Invalid type of password ( password must be at least of 8 characters)'\n    )\n    .required('Password is required'),\n});\n\nconst Register = () => {\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmitRegister = (values, { resetForm }) => {\n    const newUser = {\n      username: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    console.log(newUser);\n    dispatch(register(newUser));\n\n    resetForm();\n  };\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        display: 'flex',\n        flexDirection: { xs: 'column' },\n        paddingTop: {\n          sm: '40px',\n          md: '160px',\n          lg: '160px',\n        },\n        paddingLeft: {\n          sm: '20px',\n          md: '32px',\n          lg: '16px',\n        },\n        paddingBottom: {\n          sm: '100px',\n          md: '32x',\n          lg: '179px',\n        },\n        paddingRight: {\n          sm: '20px',\n        },\n      }}\n    >\n      <Title\n        sx={{\n          marginLeft: { xs: 'auto', md: '0px' },\n          marginRight: { xs: 'auto', md: '0px' },\n        }}\n        variant=\"h5\"\n      >\n        REGISTER\n      </Title>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmitRegister}\n        validationSchema={schema}\n      >\n        {({ values, handleChange, handleBlur }) => (\n          <Form>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: { xs: 'column' },\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '40px',\n\n                  marginLeft: { xs: 'auto', md: '0px' },\n                  marginRight: { xs: 'auto', md: '0px' },\n                  marginBottom: '60px',\n                  maxWidth: { sm: '280px', md: '240px' },\n                  width: '100%',\n                }}\n              >\n                <Input\n                  type=\"name\"\n                  name=\"name\"\n                  label=\"Name\"\n                  placeholder=\"Enter your name\"\n                  variant=\"standard\"\n                  value={values.name}\n                  required\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  sx={{\n                    label: {\n                      color: 'var(--gray-text-color)',\n                      fontSize: '14px',\n                      fontWeight: '700',\n                      letterSpacing: '0.04em',\n                    },\n                  }}\n                ></Input>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  placeholder=\"Example@mail.com\"\n                  variant=\"standard\"\n                  value={values.email}\n                  required\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  sx={{\n                    label: {\n                      color: 'var(--gray-text-color)',\n                      fontSize: '14px',\n                      fontWeight: '700',\n                      letterSpacing: '0.04em',\n                    },\n                  }}\n                ></Input>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  placeholder=\"Min 8 characters\"\n                  variant=\"standard\"\n                  value={values.password}\n                  required\n                  autoComplete=\"off\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  sx={{\n                    label: {\n                      color: 'var(--gray-text-color)',\n                      fontSize: '14px',\n                      fontWeight: '700',\n                      letterSpacing: '0.04em',\n                    },\n                  }}\n                ></Input>\n              </Box>\n\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexDirection: { xs: 'column', md: 'row' },\n                  marginLeft: { xs: 'auto', md: '0px' },\n                  marginRight: { xs: 'auto', md: '0px' },\n                }}\n              >\n                <RegisterBtn\n                  sx={{\n                    marginBottom: { xs: '20px', md: '0px' },\n                    marginRight: { md: '32px' },\n                    padding: { xs: '13px 50px', lg: '13px 37px' },\n                  }}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Register\n                </RegisterBtn>\n                <LoginBtn\n                  type=\"submit\"\n                  variant=\"outlined\"\n                  href=\"/goit_react_team_project/login\"\n                >\n                  Log in\n                </LoginBtn>\n              </Box>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\nexport default Register;\n","import Register from 'components/RegistrationForm/RegistrationForm';\nimport BackgroundWrapper from 'components/Background/BackgroundWrapper.styled';\n\nconst Registration = () => {\n  return (\n    <BackgroundWrapper>\n      <Register />\n    </BackgroundWrapper>\n  );\n};\n\nexport default Registration;\n"],"names":["styled","strawberry","banana","leaves","stain","leavesMain","bananaMain","strawberryMain","stainMain","Title","Input","TextField","color","borderBottomColor","borderColor","RegisterBtn","Button","textTransform","boxShadow","borderRadius","width","height","fontSize","fontWeight","lineHeight","backgroundColor","LoginBtn","border","schema","yup","shape","name","required","email","password","min","dispatch","useDispatch","Box","component","sx","display","flexDirection","xs","paddingTop","sm","md","lg","paddingLeft","paddingBottom","paddingRight","marginLeft","marginRight","variant","initialValues","onSubmit","values","resetForm","newUser","username","console","log","register","validationSchema","handleChange","handleBlur","gap","marginBottom","maxWidth","type","label","placeholder","value","onBlur","onChange","letterSpacing","autoComplete","padding","href"],"sourceRoot":""}